name: Test and Build Wheels

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  test:
    name: Run tests on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Install package in development mode
      run: |
        pip install -e .

    - name: Run tests
      run: |
        pytest gym_super_mario_bros/tests/ -v --cov=gym_super_mario_bros --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test  # Only run if tests pass
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: cp311-* cp312-*
        CIBW_SKIP: "*-win32 *-manylinux_i686"
        CIBW_ARCHS_WINDOWS: AMD64
        CIBW_ARCHS_LINUX: x86_64
        CIBW_BEFORE_BUILD: pip install -r requirements.txt
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: python -c "import gym_super_mario_bros; print('Package imported successfully')"

    - uses: actions/upload-artifact@v3
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    steps:
    - uses: actions/checkout@v4

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [test, build_wheels, build_sdist]  # Include test dependency
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cibw-wheels-ubuntu-20.04
        path: dist

    - uses: actions/download-artifact@v3
      with:
        name: cibw-wheels-windows-2019
        path: dist

    - uses: actions/download-artifact@v3
      with:
        name: cibw-sdist
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
